import { EventDispatcher, EventV1Request, EventDispatcherCallback } from './eventDispatcher';
import { PendingEventsStore } from './pendingEventsStore';
export declare type DispatcherEntry = {
    uuid: string;
    timestamp: number;
    request: EventV1Request;
};
export declare class PendingEventsDispatcher implements EventDispatcher {
    protected dispatcher: EventDispatcher;
    protected store: PendingEventsStore<DispatcherEntry>;
    constructor({ eventDispatcher, store, }: {
        eventDispatcher: EventDispatcher;
        store: PendingEventsStore<DispatcherEntry>;
    });
    dispatchEvent(request: EventV1Request, callback: EventDispatcherCallback): void;
    sendPendingEvents(): void;
    protected send(entry: DispatcherEntry, callback: EventDispatcherCallback): void;
}
export declare class LocalStoragePendingEventsDispatcher extends PendingEventsDispatcher {
    constructor({ eventDispatcher }: {
        eventDispatcher: EventDispatcher;
    });
}
