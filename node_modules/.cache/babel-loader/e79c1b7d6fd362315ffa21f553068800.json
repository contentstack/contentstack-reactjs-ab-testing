{"ast":null,"code":"/**\n * Copyright 2016, 2018-2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides utility method for validating that the attributes user has provided are valid\n */\nvar sprintf = require('@optimizely/js-sdk-utils').sprintf;\n\nvar lodashForOwn = require('lodash/forOwn');\n\nvar fns = require('../../utils/fns');\n\nvar ERROR_MESSAGES = require('../enums').ERROR_MESSAGES;\n\nvar MODULE_NAME = 'ATTRIBUTES_VALIDATOR';\nmodule.exports = {\n  /**\n   * Validates user's provided attributes\n   * @param  {Object}  attributes\n   * @return {boolean} True if the attributes are valid\n   * @throws If the attributes are not valid\n   */\n  validate: function (attributes) {\n    if (typeof attributes === 'object' && !Array.isArray(attributes) && attributes !== null) {\n      lodashForOwn(attributes, function (value, key) {\n        if (typeof value === 'undefined') {\n          throw new Error(sprintf(ERROR_MESSAGES.UNDEFINED_ATTRIBUTE, MODULE_NAME, key));\n        }\n      });\n      return true;\n    } else {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_ATTRIBUTES, MODULE_NAME));\n    }\n  },\n  isAttributeValid: function (attributeKey, attributeValue) {\n    return typeof attributeKey === 'string' && (typeof attributeValue === 'string' || typeof attributeValue === 'boolean' || fns.isNumber(attributeValue) && fns.isFinite(attributeValue));\n  }\n};","map":{"version":3,"sources":["/home/abhishek/Music/contentstack-reactjs-ab-testing/node_modules/@optimizely/optimizely-sdk/lib/utils/attributes_validator/index.js"],"names":["sprintf","require","lodashForOwn","fns","ERROR_MESSAGES","MODULE_NAME","module","exports","validate","attributes","Array","isArray","value","key","Error","UNDEFINED_ATTRIBUTE","INVALID_ATTRIBUTES","isAttributeValid","attributeKey","attributeValue","isNumber","isFinite"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AAIA,IAAIA,OAAO,GAAGC,OAAO,CAAC,0BAAD,CAAP,CAAoCD,OAAlD;;AACA,IAAIE,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,iBAAD,CAAjB;;AAEA,IAAIG,cAAc,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,cAAzC;;AACA,IAAIC,WAAW,GAAG,sBAAlB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACf;;;;;;AAMAC,EAAAA,QAAQ,EAAE,UAASC,UAAT,EAAqB;AAC7B,QAAI,OAAOA,UAAP,KAAsB,QAAtB,IAAkC,CAACC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAnC,IAAgEA,UAAU,KAAK,IAAnF,EAAyF;AACvFP,MAAAA,YAAY,CAACO,UAAD,EAAa,UAASG,KAAT,EAAgBC,GAAhB,EAAqB;AAC5C,YAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC;AAChC,gBAAM,IAAIE,KAAJ,CAAUd,OAAO,CAACI,cAAc,CAACW,mBAAhB,EAAqCV,WAArC,EAAkDQ,GAAlD,CAAjB,CAAN;AACD;AACF,OAJW,CAAZ;AAKA,aAAO,IAAP;AACD,KAPD,MAOO;AACL,YAAM,IAAIC,KAAJ,CAAUd,OAAO,CAACI,cAAc,CAACY,kBAAhB,EAAoCX,WAApC,CAAjB,CAAN;AACD;AACF,GAlBc;AAoBfY,EAAAA,gBAAgB,EAAE,UAASC,YAAT,EAAuBC,cAAvB,EAAuC;AACvD,WAAQ,OAAOD,YAAP,KAAwB,QAAzB,KACN,OAAOC,cAAP,KAA0B,QAA1B,IAAsC,OAAOA,cAAP,KAA0B,SAAhE,IAA8EhB,GAAG,CAACiB,QAAJ,CAAaD,cAAb,KAAgChB,GAAG,CAACkB,QAAJ,CAAaF,cAAb,CADxG,CAAP;AAED;AAvBc,CAAjB","sourcesContent":["/**\n * Copyright 2016, 2018-2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides utility method for validating that the attributes user has provided are valid\n */\n\nvar sprintf = require('@optimizely/js-sdk-utils').sprintf;\nvar lodashForOwn = require('lodash/forOwn');\nvar fns = require('../../utils/fns');\n\nvar ERROR_MESSAGES = require('../enums').ERROR_MESSAGES;\nvar MODULE_NAME = 'ATTRIBUTES_VALIDATOR';\n\nmodule.exports = {\n  /**\n   * Validates user's provided attributes\n   * @param  {Object}  attributes\n   * @return {boolean} True if the attributes are valid\n   * @throws If the attributes are not valid\n   */\n  validate: function(attributes) {\n    if (typeof attributes === 'object' && !Array.isArray(attributes) && attributes !== null) {\n      lodashForOwn(attributes, function(value, key) {\n        if (typeof value === 'undefined') {\n          throw new Error(sprintf(ERROR_MESSAGES.UNDEFINED_ATTRIBUTE, MODULE_NAME, key));\n        }\n      });\n      return true;\n    } else {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_ATTRIBUTES, MODULE_NAME));\n    }\n  },\n\n  isAttributeValid: function(attributeKey, attributeValue) {\n    return (typeof attributeKey === 'string') &&\n    (typeof attributeValue === 'string' || typeof attributeValue === 'boolean' || (fns.isNumber(attributeValue) && fns.isFinite(attributeValue)));\n  },\n};\n"]},"metadata":{},"sourceType":"script"}