{"ast":null,"code":"/****************************************************************************\n * Copyright 2017, Optimizely, Inc. and contributors                        *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\n/**\n * Provides utility method for validating that the given user profile service implementation is valid.\n */\nvar sprintf = require('@optimizely/js-sdk-utils').sprintf;\n\nvar ERROR_MESSAGES = require('../enums').ERROR_MESSAGES;\n\nvar MODULE_NAME = 'USER_PROFILE_SERVICE_VALIDATOR';\nmodule.exports = {\n  /**\n   * Validates user's provided user profile service instance\n   * @param  {Object}  userProfileServiceInstance\n   * @return {boolean} True if the instance is valid\n   * @throws If the instance is not valid\n   */\n  validate: function (userProfileServiceInstance) {\n    if (typeof userProfileServiceInstance.lookup !== 'function') {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_PROFILE_SERVICE, MODULE_NAME, 'Missing function \\'lookup\\''));\n    } else if (typeof userProfileServiceInstance.save !== 'function') {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_PROFILE_SERVICE, MODULE_NAME, 'Missing function \\'save\\''));\n    }\n\n    return true;\n  }\n};","map":{"version":3,"sources":["/home/abhishek/Music/contentstack-reactjs-ab-testing/node_modules/@optimizely/optimizely-sdk/lib/utils/user_profile_service_validator/index.js"],"names":["sprintf","require","ERROR_MESSAGES","MODULE_NAME","module","exports","validate","userProfileServiceInstance","lookup","Error","INVALID_USER_PROFILE_SERVICE","save"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AAIA,IAAIA,OAAO,GAAGC,OAAO,CAAC,0BAAD,CAAP,CAAoCD,OAAlD;;AAEA,IAAIE,cAAc,GAAGD,OAAO,CAAC,UAAD,CAAP,CAAoBC,cAAzC;;AACA,IAAIC,WAAW,GAAG,gCAAlB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACf;;;;;;AAMAC,EAAAA,QAAQ,EAAE,UAASC,0BAAT,EAAqC;AAC7C,QAAI,OAAOA,0BAA0B,CAACC,MAAlC,KAA6C,UAAjD,EAA6D;AAC3D,YAAM,IAAIC,KAAJ,CAAUT,OAAO,CAACE,cAAc,CAACQ,4BAAhB,EAA8CP,WAA9C,EAA2D,6BAA3D,CAAjB,CAAN;AACD,KAFD,MAEO,IAAI,OAAOI,0BAA0B,CAACI,IAAlC,KAA2C,UAA/C,EAA2D;AAChE,YAAM,IAAIF,KAAJ,CAAUT,OAAO,CAACE,cAAc,CAACQ,4BAAhB,EAA8CP,WAA9C,EAA2D,2BAA3D,CAAjB,CAAN;AACD;;AACD,WAAO,IAAP;AACD;AAdc,CAAjB","sourcesContent":["/****************************************************************************\n * Copyright 2017, Optimizely, Inc. and contributors                        *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\n/**\n * Provides utility method for validating that the given user profile service implementation is valid.\n */\n\nvar sprintf = require('@optimizely/js-sdk-utils').sprintf;\n\nvar ERROR_MESSAGES = require('../enums').ERROR_MESSAGES;\nvar MODULE_NAME = 'USER_PROFILE_SERVICE_VALIDATOR';\n\nmodule.exports = {\n  /**\n   * Validates user's provided user profile service instance\n   * @param  {Object}  userProfileServiceInstance\n   * @return {boolean} True if the instance is valid\n   * @throws If the instance is not valid\n   */\n  validate: function(userProfileServiceInstance) {\n    if (typeof userProfileServiceInstance.lookup !== 'function') {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_PROFILE_SERVICE, MODULE_NAME, 'Missing function \\'lookup\\''));\n    } else if (typeof userProfileServiceInstance.save !== 'function') {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_PROFILE_SERVICE, MODULE_NAME, 'Missing function \\'save\\''));\n    }\n    return true;\n  },\n};\n"]},"metadata":{},"sourceType":"script"}