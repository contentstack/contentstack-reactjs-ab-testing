{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar config_1 = require(\"./config\");\n\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\n\nvar logger = js_sdk_logging_1.getLogger('DatafileManager');\nvar GET_METHOD = 'GET';\nvar READY_STATE_DONE = 4;\n\nfunction parseHeadersFromXhr(req) {\n  var allHeadersString = req.getAllResponseHeaders();\n\n  if (allHeadersString === null) {\n    return {};\n  }\n\n  var headerLines = allHeadersString.split('\\r\\n');\n  var headers = {};\n  headerLines.forEach(function (headerLine) {\n    var separatorIndex = headerLine.indexOf(': ');\n\n    if (separatorIndex > -1) {\n      var headerName = headerLine.slice(0, separatorIndex);\n      var headerValue = headerLine.slice(separatorIndex + 2);\n\n      if (headerValue.length > 0) {\n        headers[headerName] = headerValue;\n      }\n    }\n  });\n  return headers;\n}\n\nfunction setHeadersInXhr(headers, req) {\n  Object.keys(headers).forEach(function (headerName) {\n    var header = headers[headerName];\n    req.setRequestHeader(headerName, header);\n  });\n}\n\nfunction makeGetRequest(reqUrl, headers) {\n  var req = new XMLHttpRequest();\n  var responsePromise = new Promise(function (resolve, reject) {\n    req.open(GET_METHOD, reqUrl, true);\n    setHeadersInXhr(headers, req);\n\n    req.onreadystatechange = function () {\n      if (req.readyState === READY_STATE_DONE) {\n        var statusCode = req.status;\n\n        if (statusCode === 0) {\n          reject(new Error('Request error'));\n          return;\n        }\n\n        var headers_1 = parseHeadersFromXhr(req);\n        var resp = {\n          statusCode: req.status,\n          body: req.responseText,\n          headers: headers_1\n        };\n        resolve(resp);\n      }\n    };\n\n    req.timeout = config_1.REQUEST_TIMEOUT_MS;\n\n    req.ontimeout = function () {\n      logger.error('Request timed out');\n    };\n\n    req.send();\n  });\n  return {\n    responsePromise: responsePromise,\n    abort: function () {\n      req.abort();\n    }\n  };\n}\n\nexports.makeGetRequest = makeGetRequest;","map":{"version":3,"sources":["/home/abhishek/Music/contentstack-reactjs-ab-testing/node_modules/@optimizely/js-sdk-datafile-manager/lib/browserRequest.js"],"names":["Object","defineProperty","exports","value","config_1","require","js_sdk_logging_1","logger","getLogger","GET_METHOD","READY_STATE_DONE","parseHeadersFromXhr","req","allHeadersString","getAllResponseHeaders","headerLines","split","headers","forEach","headerLine","separatorIndex","indexOf","headerName","slice","headerValue","length","setHeadersInXhr","keys","header","setRequestHeader","makeGetRequest","reqUrl","XMLHttpRequest","responsePromise","Promise","resolve","reject","open","onreadystatechange","readyState","statusCode","status","Error","headers_1","resp","body","responseText","timeout","REQUEST_TIMEOUT_MS","ontimeout","error","send","abort"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar logger = js_sdk_logging_1.getLogger('DatafileManager');\nvar GET_METHOD = 'GET';\nvar READY_STATE_DONE = 4;\nfunction parseHeadersFromXhr(req) {\n    var allHeadersString = req.getAllResponseHeaders();\n    if (allHeadersString === null) {\n        return {};\n    }\n    var headerLines = allHeadersString.split('\\r\\n');\n    var headers = {};\n    headerLines.forEach(function (headerLine) {\n        var separatorIndex = headerLine.indexOf(': ');\n        if (separatorIndex > -1) {\n            var headerName = headerLine.slice(0, separatorIndex);\n            var headerValue = headerLine.slice(separatorIndex + 2);\n            if (headerValue.length > 0) {\n                headers[headerName] = headerValue;\n            }\n        }\n    });\n    return headers;\n}\nfunction setHeadersInXhr(headers, req) {\n    Object.keys(headers).forEach(function (headerName) {\n        var header = headers[headerName];\n        req.setRequestHeader(headerName, header);\n    });\n}\nfunction makeGetRequest(reqUrl, headers) {\n    var req = new XMLHttpRequest();\n    var responsePromise = new Promise(function (resolve, reject) {\n        req.open(GET_METHOD, reqUrl, true);\n        setHeadersInXhr(headers, req);\n        req.onreadystatechange = function () {\n            if (req.readyState === READY_STATE_DONE) {\n                var statusCode = req.status;\n                if (statusCode === 0) {\n                    reject(new Error('Request error'));\n                    return;\n                }\n                var headers_1 = parseHeadersFromXhr(req);\n                var resp = {\n                    statusCode: req.status,\n                    body: req.responseText,\n                    headers: headers_1,\n                };\n                resolve(resp);\n            }\n        };\n        req.timeout = config_1.REQUEST_TIMEOUT_MS;\n        req.ontimeout = function () {\n            logger.error('Request timed out');\n        };\n        req.send();\n    });\n    return {\n        responsePromise: responsePromise,\n        abort: function () {\n            req.abort();\n        },\n    };\n}\nexports.makeGetRequest = makeGetRequest;\n"]},"metadata":{},"sourceType":"script"}