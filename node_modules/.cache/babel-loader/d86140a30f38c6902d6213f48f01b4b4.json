{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar config_1 = require(\"./config\");\n\nfunction randomMilliseconds() {\n  return Math.round(Math.random() * 1000);\n}\n\nvar BackoffController =\n/** @class */\nfunction () {\n  function BackoffController() {\n    this.errorCount = 0;\n  }\n\n  BackoffController.prototype.getDelay = function () {\n    if (this.errorCount === 0) {\n      return 0;\n    }\n\n    var baseWaitSeconds = config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT[Math.min(config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT.length - 1, this.errorCount)];\n    return baseWaitSeconds * 1000 + randomMilliseconds();\n  };\n\n  BackoffController.prototype.countError = function () {\n    if (this.errorCount < config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT.length - 1) {\n      this.errorCount++;\n    }\n  };\n\n  BackoffController.prototype.reset = function () {\n    this.errorCount = 0;\n  };\n\n  return BackoffController;\n}();\n\nexports.default = BackoffController;","map":{"version":3,"sources":["/home/abhishek/Music/contentstack-reactjs-ab-testing/node_modules/@optimizely/js-sdk-datafile-manager/lib/backoffController.js"],"names":["Object","defineProperty","exports","value","config_1","require","randomMilliseconds","Math","round","random","BackoffController","errorCount","prototype","getDelay","baseWaitSeconds","BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT","min","length","countError","reset","default"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;AAeAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,SAASC,kBAAT,GAA8B;AAC1B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAP;AACH;;AACD,IAAIC,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,GAA6B;AACzB,SAAKC,UAAL,GAAkB,CAAlB;AACH;;AACDD,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BC,QAA5B,GAAuC,YAAY;AAC/C,QAAI,KAAKF,UAAL,KAAoB,CAAxB,EAA2B;AACvB,aAAO,CAAP;AACH;;AACD,QAAIG,eAAe,GAAGV,QAAQ,CAACW,wCAAT,CAAkDR,IAAI,CAACS,GAAL,CAASZ,QAAQ,CAACW,wCAAT,CAAkDE,MAAlD,GAA2D,CAApE,EAAuE,KAAKN,UAA5E,CAAlD,CAAtB;AACA,WAAOG,eAAe,GAAG,IAAlB,GAAyBR,kBAAkB,EAAlD;AACH,GAND;;AAOAI,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BM,UAA5B,GAAyC,YAAY;AACjD,QAAI,KAAKP,UAAL,GAAkBP,QAAQ,CAACW,wCAAT,CAAkDE,MAAlD,GAA2D,CAAjF,EAAoF;AAChF,WAAKN,UAAL;AACH;AACJ,GAJD;;AAKAD,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BO,KAA5B,GAAoC,YAAY;AAC5C,SAAKR,UAAL,GAAkB,CAAlB;AACH,GAFD;;AAGA,SAAOD,iBAAP;AACH,CApBsC,EAAvC;;AAqBAR,OAAO,CAACkB,OAAR,GAAkBV,iBAAlB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nfunction randomMilliseconds() {\n    return Math.round(Math.random() * 1000);\n}\nvar BackoffController = /** @class */ (function () {\n    function BackoffController() {\n        this.errorCount = 0;\n    }\n    BackoffController.prototype.getDelay = function () {\n        if (this.errorCount === 0) {\n            return 0;\n        }\n        var baseWaitSeconds = config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT[Math.min(config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT.length - 1, this.errorCount)];\n        return baseWaitSeconds * 1000 + randomMilliseconds();\n    };\n    BackoffController.prototype.countError = function () {\n        if (this.errorCount < config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT.length - 1) {\n            this.errorCount++;\n        }\n    };\n    BackoffController.prototype.reset = function () {\n        this.errorCount = 0;\n    };\n    return BackoffController;\n}());\nexports.default = BackoffController;\n"]},"metadata":{},"sourceType":"script"}