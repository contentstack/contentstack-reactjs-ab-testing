{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\n\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\n\nvar eventEmitter_1 = __importDefault(require(\"./eventEmitter\"));\n\nvar config_1 = require(\"./config\");\n\nvar backoffController_1 = __importDefault(require(\"./backoffController\"));\n\nvar logger = js_sdk_logging_1.getLogger('DatafileManager');\nvar UPDATE_EVT = 'update';\n\nfunction isValidUpdateInterval(updateInterval) {\n  return updateInterval >= config_1.MIN_UPDATE_INTERVAL;\n}\n\nfunction isSuccessStatusCode(statusCode) {\n  return statusCode >= 200 && statusCode < 400;\n}\n\nvar HttpPollingDatafileManager =\n/** @class */\nfunction () {\n  function HttpPollingDatafileManager(config) {\n    var _this = this;\n\n    var configWithDefaultsApplied = __assign({}, this.getConfigDefaults(), config);\n\n    var datafile = configWithDefaultsApplied.datafile,\n        _a = configWithDefaultsApplied.autoUpdate,\n        autoUpdate = _a === void 0 ? false : _a,\n        sdkKey = configWithDefaultsApplied.sdkKey,\n        _b = configWithDefaultsApplied.updateInterval,\n        updateInterval = _b === void 0 ? config_1.DEFAULT_UPDATE_INTERVAL : _b,\n        _c = configWithDefaultsApplied.urlTemplate,\n        urlTemplate = _c === void 0 ? config_1.DEFAULT_URL_TEMPLATE : _c;\n    this.isReadyPromiseSettled = false;\n\n    this.readyPromiseResolver = function () {};\n\n    this.readyPromiseRejecter = function () {};\n\n    this.readyPromise = new Promise(function (resolve, reject) {\n      _this.readyPromiseResolver = resolve;\n      _this.readyPromiseRejecter = reject;\n    });\n\n    if (datafile) {\n      this.currentDatafile = datafile;\n      this.resolveReadyPromise();\n    } else {\n      this.currentDatafile = null;\n    }\n\n    this.isStarted = false;\n    this.datafileUrl = js_sdk_utils_1.sprintf(urlTemplate, sdkKey);\n    this.emitter = new eventEmitter_1.default();\n    this.autoUpdate = autoUpdate;\n\n    if (isValidUpdateInterval(updateInterval)) {\n      this.updateInterval = updateInterval;\n    } else {\n      logger.warn('Invalid updateInterval %s, defaulting to %s', updateInterval, config_1.DEFAULT_UPDATE_INTERVAL);\n      this.updateInterval = config_1.DEFAULT_UPDATE_INTERVAL;\n    }\n\n    this.currentTimeout = null;\n    this.currentRequest = null;\n    this.backoffController = new backoffController_1.default();\n    this.syncOnCurrentRequestComplete = false;\n  }\n\n  HttpPollingDatafileManager.prototype.get = function () {\n    return this.currentDatafile;\n  };\n\n  HttpPollingDatafileManager.prototype.start = function () {\n    if (!this.isStarted) {\n      logger.debug('Datafile manager started');\n      this.isStarted = true;\n      this.backoffController.reset();\n      this.syncDatafile();\n    }\n  };\n\n  HttpPollingDatafileManager.prototype.stop = function () {\n    logger.debug('Datafile manager stopped');\n    this.isStarted = false;\n\n    if (this.currentTimeout) {\n      clearTimeout(this.currentTimeout);\n      this.currentTimeout = null;\n    }\n\n    this.emitter.removeAllListeners();\n\n    if (this.currentRequest) {\n      this.currentRequest.abort();\n      this.currentRequest = null;\n    }\n\n    return Promise.resolve();\n  };\n\n  HttpPollingDatafileManager.prototype.onReady = function () {\n    return this.readyPromise;\n  };\n\n  HttpPollingDatafileManager.prototype.on = function (eventName, listener) {\n    return this.emitter.on(eventName, listener);\n  };\n\n  HttpPollingDatafileManager.prototype.onRequestRejected = function (err) {\n    if (!this.isStarted) {\n      return;\n    }\n\n    this.backoffController.countError();\n\n    if (err instanceof Error) {\n      logger.error('Error fetching datafile: %s', err.message, err);\n    } else if (typeof err === 'string') {\n      logger.error('Error fetching datafile: %s', err);\n    } else {\n      logger.error('Error fetching datafile');\n    }\n  };\n\n  HttpPollingDatafileManager.prototype.onRequestResolved = function (response) {\n    if (!this.isStarted) {\n      return;\n    }\n\n    if (typeof response.statusCode !== 'undefined' && isSuccessStatusCode(response.statusCode)) {\n      this.backoffController.reset();\n    } else {\n      this.backoffController.countError();\n    }\n\n    this.trySavingLastModified(response.headers);\n    var datafile = this.getNextDatafileFromResponse(response);\n\n    if (datafile !== null) {\n      logger.info('Updating datafile from response');\n      this.currentDatafile = datafile;\n\n      if (!this.isReadyPromiseSettled) {\n        this.resolveReadyPromise();\n      } else {\n        var datafileUpdate = {\n          datafile: datafile\n        };\n        this.emitter.emit(UPDATE_EVT, datafileUpdate);\n      }\n    }\n  };\n\n  HttpPollingDatafileManager.prototype.onRequestComplete = function () {\n    if (!this.isStarted) {\n      return;\n    }\n\n    this.currentRequest = null;\n\n    if (!this.isReadyPromiseSettled && !this.autoUpdate) {\n      // We will never resolve ready, so reject it\n      this.rejectReadyPromise(new Error('Failed to become ready'));\n    }\n\n    if (this.autoUpdate && this.syncOnCurrentRequestComplete) {\n      this.syncDatafile();\n    }\n\n    this.syncOnCurrentRequestComplete = false;\n  };\n\n  HttpPollingDatafileManager.prototype.syncDatafile = function () {\n    var _this = this;\n\n    var headers = {};\n\n    if (this.lastResponseLastModified) {\n      headers['if-modified-since'] = this.lastResponseLastModified;\n    }\n\n    logger.debug('Making datafile request to url %s with headers: %s', this.datafileUrl, function () {\n      return JSON.stringify(headers);\n    });\n    this.currentRequest = this.makeGetRequest(this.datafileUrl, headers);\n\n    var onRequestComplete = function () {\n      _this.onRequestComplete();\n    };\n\n    var onRequestResolved = function (response) {\n      _this.onRequestResolved(response);\n    };\n\n    var onRequestRejected = function (err) {\n      _this.onRequestRejected(err);\n    };\n\n    this.currentRequest.responsePromise.then(onRequestResolved, onRequestRejected).then(onRequestComplete, onRequestComplete);\n\n    if (this.autoUpdate) {\n      this.scheduleNextUpdate();\n    }\n  };\n\n  HttpPollingDatafileManager.prototype.resolveReadyPromise = function () {\n    this.readyPromiseResolver();\n    this.isReadyPromiseSettled = true;\n  };\n\n  HttpPollingDatafileManager.prototype.rejectReadyPromise = function (err) {\n    this.readyPromiseRejecter(err);\n    this.isReadyPromiseSettled = true;\n  };\n\n  HttpPollingDatafileManager.prototype.scheduleNextUpdate = function () {\n    var _this = this;\n\n    var currentBackoffDelay = this.backoffController.getDelay();\n    var nextUpdateDelay = Math.max(currentBackoffDelay, this.updateInterval);\n    logger.debug('Scheduling sync in %s ms', nextUpdateDelay);\n    this.currentTimeout = setTimeout(function () {\n      if (_this.currentRequest) {\n        _this.syncOnCurrentRequestComplete = true;\n      } else {\n        _this.syncDatafile();\n      }\n    }, nextUpdateDelay);\n  };\n\n  HttpPollingDatafileManager.prototype.getNextDatafileFromResponse = function (response) {\n    logger.debug('Response status code: %s', response.statusCode);\n\n    if (typeof response.statusCode === 'undefined') {\n      return null;\n    }\n\n    if (response.statusCode === 304) {\n      return null;\n    }\n\n    if (isSuccessStatusCode(response.statusCode)) {\n      return this.tryParsingBodyAsJSON(response.body);\n    }\n\n    return null;\n  };\n\n  HttpPollingDatafileManager.prototype.tryParsingBodyAsJSON = function (body) {\n    var parseResult;\n\n    try {\n      parseResult = JSON.parse(body);\n    } catch (err) {\n      logger.error('Error parsing response body: %s', err.message, err);\n      return null;\n    }\n\n    var datafileObj = null;\n\n    if (typeof parseResult === 'object' && parseResult !== null) {\n      datafileObj = parseResult;\n    } else {\n      logger.error('Error parsing response body: was not an object');\n    }\n\n    return datafileObj;\n  };\n\n  HttpPollingDatafileManager.prototype.trySavingLastModified = function (headers) {\n    var lastModifiedHeader = headers['last-modified'] || headers['Last-Modified'];\n\n    if (typeof lastModifiedHeader !== 'undefined') {\n      this.lastResponseLastModified = lastModifiedHeader;\n      logger.debug('Saved last modified header value from response: %s', this.lastResponseLastModified);\n    }\n  };\n\n  return HttpPollingDatafileManager;\n}();\n\nexports.default = HttpPollingDatafileManager;","map":{"version":3,"sources":["/home/abhishek/Music/contentstack-reactjs-ab-testing/node_modules/@optimizely/js-sdk-datafile-manager/lib/httpPollingDatafileManager.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__importDefault","mod","__esModule","defineProperty","exports","value","js_sdk_logging_1","require","js_sdk_utils_1","eventEmitter_1","config_1","backoffController_1","logger","getLogger","UPDATE_EVT","isValidUpdateInterval","updateInterval","MIN_UPDATE_INTERVAL","isSuccessStatusCode","statusCode","HttpPollingDatafileManager","config","_this","configWithDefaultsApplied","getConfigDefaults","datafile","_a","autoUpdate","sdkKey","_b","DEFAULT_UPDATE_INTERVAL","_c","urlTemplate","DEFAULT_URL_TEMPLATE","isReadyPromiseSettled","readyPromiseResolver","readyPromiseRejecter","readyPromise","Promise","resolve","reject","currentDatafile","resolveReadyPromise","isStarted","datafileUrl","sprintf","emitter","default","warn","currentTimeout","currentRequest","backoffController","syncOnCurrentRequestComplete","get","start","debug","reset","syncDatafile","stop","clearTimeout","removeAllListeners","abort","onReady","on","eventName","listener","onRequestRejected","err","countError","Error","error","message","onRequestResolved","response","trySavingLastModified","headers","getNextDatafileFromResponse","info","datafileUpdate","emit","onRequestComplete","rejectReadyPromise","lastResponseLastModified","JSON","stringify","makeGetRequest","responsePromise","then","scheduleNextUpdate","currentBackoffDelay","getDelay","nextUpdateDelay","Math","max","setTimeout","tryParsingBodyAsJSON","body","parseResult","parse","datafileObj","lastModifiedHeader"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\nvar eventEmitter_1 = __importDefault(require(\"./eventEmitter\"));\nvar config_1 = require(\"./config\");\nvar backoffController_1 = __importDefault(require(\"./backoffController\"));\nvar logger = js_sdk_logging_1.getLogger('DatafileManager');\nvar UPDATE_EVT = 'update';\nfunction isValidUpdateInterval(updateInterval) {\n    return updateInterval >= config_1.MIN_UPDATE_INTERVAL;\n}\nfunction isSuccessStatusCode(statusCode) {\n    return statusCode >= 200 && statusCode < 400;\n}\nvar HttpPollingDatafileManager = /** @class */ (function () {\n    function HttpPollingDatafileManager(config) {\n        var _this = this;\n        var configWithDefaultsApplied = __assign({}, this.getConfigDefaults(), config);\n        var datafile = configWithDefaultsApplied.datafile, _a = configWithDefaultsApplied.autoUpdate, autoUpdate = _a === void 0 ? false : _a, sdkKey = configWithDefaultsApplied.sdkKey, _b = configWithDefaultsApplied.updateInterval, updateInterval = _b === void 0 ? config_1.DEFAULT_UPDATE_INTERVAL : _b, _c = configWithDefaultsApplied.urlTemplate, urlTemplate = _c === void 0 ? config_1.DEFAULT_URL_TEMPLATE : _c;\n        this.isReadyPromiseSettled = false;\n        this.readyPromiseResolver = function () { };\n        this.readyPromiseRejecter = function () { };\n        this.readyPromise = new Promise(function (resolve, reject) {\n            _this.readyPromiseResolver = resolve;\n            _this.readyPromiseRejecter = reject;\n        });\n        if (datafile) {\n            this.currentDatafile = datafile;\n            this.resolveReadyPromise();\n        }\n        else {\n            this.currentDatafile = null;\n        }\n        this.isStarted = false;\n        this.datafileUrl = js_sdk_utils_1.sprintf(urlTemplate, sdkKey);\n        this.emitter = new eventEmitter_1.default();\n        this.autoUpdate = autoUpdate;\n        if (isValidUpdateInterval(updateInterval)) {\n            this.updateInterval = updateInterval;\n        }\n        else {\n            logger.warn('Invalid updateInterval %s, defaulting to %s', updateInterval, config_1.DEFAULT_UPDATE_INTERVAL);\n            this.updateInterval = config_1.DEFAULT_UPDATE_INTERVAL;\n        }\n        this.currentTimeout = null;\n        this.currentRequest = null;\n        this.backoffController = new backoffController_1.default();\n        this.syncOnCurrentRequestComplete = false;\n    }\n    HttpPollingDatafileManager.prototype.get = function () {\n        return this.currentDatafile;\n    };\n    HttpPollingDatafileManager.prototype.start = function () {\n        if (!this.isStarted) {\n            logger.debug('Datafile manager started');\n            this.isStarted = true;\n            this.backoffController.reset();\n            this.syncDatafile();\n        }\n    };\n    HttpPollingDatafileManager.prototype.stop = function () {\n        logger.debug('Datafile manager stopped');\n        this.isStarted = false;\n        if (this.currentTimeout) {\n            clearTimeout(this.currentTimeout);\n            this.currentTimeout = null;\n        }\n        this.emitter.removeAllListeners();\n        if (this.currentRequest) {\n            this.currentRequest.abort();\n            this.currentRequest = null;\n        }\n        return Promise.resolve();\n    };\n    HttpPollingDatafileManager.prototype.onReady = function () {\n        return this.readyPromise;\n    };\n    HttpPollingDatafileManager.prototype.on = function (eventName, listener) {\n        return this.emitter.on(eventName, listener);\n    };\n    HttpPollingDatafileManager.prototype.onRequestRejected = function (err) {\n        if (!this.isStarted) {\n            return;\n        }\n        this.backoffController.countError();\n        if (err instanceof Error) {\n            logger.error('Error fetching datafile: %s', err.message, err);\n        }\n        else if (typeof err === 'string') {\n            logger.error('Error fetching datafile: %s', err);\n        }\n        else {\n            logger.error('Error fetching datafile');\n        }\n    };\n    HttpPollingDatafileManager.prototype.onRequestResolved = function (response) {\n        if (!this.isStarted) {\n            return;\n        }\n        if (typeof response.statusCode !== 'undefined' &&\n            isSuccessStatusCode(response.statusCode)) {\n            this.backoffController.reset();\n        }\n        else {\n            this.backoffController.countError();\n        }\n        this.trySavingLastModified(response.headers);\n        var datafile = this.getNextDatafileFromResponse(response);\n        if (datafile !== null) {\n            logger.info('Updating datafile from response');\n            this.currentDatafile = datafile;\n            if (!this.isReadyPromiseSettled) {\n                this.resolveReadyPromise();\n            }\n            else {\n                var datafileUpdate = {\n                    datafile: datafile,\n                };\n                this.emitter.emit(UPDATE_EVT, datafileUpdate);\n            }\n        }\n    };\n    HttpPollingDatafileManager.prototype.onRequestComplete = function () {\n        if (!this.isStarted) {\n            return;\n        }\n        this.currentRequest = null;\n        if (!this.isReadyPromiseSettled && !this.autoUpdate) {\n            // We will never resolve ready, so reject it\n            this.rejectReadyPromise(new Error('Failed to become ready'));\n        }\n        if (this.autoUpdate && this.syncOnCurrentRequestComplete) {\n            this.syncDatafile();\n        }\n        this.syncOnCurrentRequestComplete = false;\n    };\n    HttpPollingDatafileManager.prototype.syncDatafile = function () {\n        var _this = this;\n        var headers = {};\n        if (this.lastResponseLastModified) {\n            headers['if-modified-since'] = this.lastResponseLastModified;\n        }\n        logger.debug('Making datafile request to url %s with headers: %s', this.datafileUrl, function () { return JSON.stringify(headers); });\n        this.currentRequest = this.makeGetRequest(this.datafileUrl, headers);\n        var onRequestComplete = function () {\n            _this.onRequestComplete();\n        };\n        var onRequestResolved = function (response) {\n            _this.onRequestResolved(response);\n        };\n        var onRequestRejected = function (err) {\n            _this.onRequestRejected(err);\n        };\n        this.currentRequest.responsePromise\n            .then(onRequestResolved, onRequestRejected)\n            .then(onRequestComplete, onRequestComplete);\n        if (this.autoUpdate) {\n            this.scheduleNextUpdate();\n        }\n    };\n    HttpPollingDatafileManager.prototype.resolveReadyPromise = function () {\n        this.readyPromiseResolver();\n        this.isReadyPromiseSettled = true;\n    };\n    HttpPollingDatafileManager.prototype.rejectReadyPromise = function (err) {\n        this.readyPromiseRejecter(err);\n        this.isReadyPromiseSettled = true;\n    };\n    HttpPollingDatafileManager.prototype.scheduleNextUpdate = function () {\n        var _this = this;\n        var currentBackoffDelay = this.backoffController.getDelay();\n        var nextUpdateDelay = Math.max(currentBackoffDelay, this.updateInterval);\n        logger.debug('Scheduling sync in %s ms', nextUpdateDelay);\n        this.currentTimeout = setTimeout(function () {\n            if (_this.currentRequest) {\n                _this.syncOnCurrentRequestComplete = true;\n            }\n            else {\n                _this.syncDatafile();\n            }\n        }, nextUpdateDelay);\n    };\n    HttpPollingDatafileManager.prototype.getNextDatafileFromResponse = function (response) {\n        logger.debug('Response status code: %s', response.statusCode);\n        if (typeof response.statusCode === 'undefined') {\n            return null;\n        }\n        if (response.statusCode === 304) {\n            return null;\n        }\n        if (isSuccessStatusCode(response.statusCode)) {\n            return this.tryParsingBodyAsJSON(response.body);\n        }\n        return null;\n    };\n    HttpPollingDatafileManager.prototype.tryParsingBodyAsJSON = function (body) {\n        var parseResult;\n        try {\n            parseResult = JSON.parse(body);\n        }\n        catch (err) {\n            logger.error('Error parsing response body: %s', err.message, err);\n            return null;\n        }\n        var datafileObj = null;\n        if (typeof parseResult === 'object' && parseResult !== null) {\n            datafileObj = parseResult;\n        }\n        else {\n            logger.error('Error parsing response body: was not an object');\n        }\n        return datafileObj;\n    };\n    HttpPollingDatafileManager.prototype.trySavingLastModified = function (headers) {\n        var lastModifiedHeader = headers['last-modified'] || headers['Last-Modified'];\n        if (typeof lastModifiedHeader !== 'undefined') {\n            this.lastResponseLastModified = lastModifiedHeader;\n            logger.debug('Saved last modified header value from response: %s', this.lastResponseLastModified);\n        }\n    };\n    return HttpPollingDatafileManager;\n}());\nexports.default = HttpPollingDatafileManager;\n"]},"metadata":{},"sourceType":"script"}