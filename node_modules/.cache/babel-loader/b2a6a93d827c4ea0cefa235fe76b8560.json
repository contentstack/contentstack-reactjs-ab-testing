{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar errorHandler_1 = require(\"./errorHandler\");\n\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\n\nvar models_1 = require(\"./models\");\n\nvar stringToLogLevel = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARNING: 3,\n  ERROR: 4\n};\n\nfunction coerceLogLevel(level) {\n  if (typeof level !== 'string') {\n    return level;\n  }\n\n  level = level.toUpperCase();\n\n  if (level === 'WARN') {\n    level = 'WARNING';\n  }\n\n  if (!stringToLogLevel[level]) {\n    return level;\n  }\n\n  return stringToLogLevel[level];\n}\n\nvar DefaultLogManager =\n/** @class */\nfunction () {\n  function DefaultLogManager() {\n    this.defaultLoggerFacade = new OptimizelyLogger();\n    this.loggers = {};\n  }\n\n  DefaultLogManager.prototype.getLogger = function (name) {\n    if (!name) {\n      return this.defaultLoggerFacade;\n    }\n\n    if (!this.loggers[name]) {\n      this.loggers[name] = new OptimizelyLogger({\n        messagePrefix: name\n      });\n    }\n\n    return this.loggers[name];\n  };\n\n  return DefaultLogManager;\n}();\n\nvar ConsoleLogHandler =\n/** @class */\nfunction () {\n  /**\n   * Creates an instance of ConsoleLogger.\n   * @param {ConsoleLogHandlerConfig} config\n   * @memberof ConsoleLogger\n   */\n  function ConsoleLogHandler(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this.logLevel = models_1.LogLevel.NOTSET;\n\n    if (config.logLevel !== undefined && js_sdk_utils_1.isValidEnum(models_1.LogLevel, config.logLevel)) {\n      this.setLogLevel(config.logLevel);\n    }\n\n    this.logToConsole = config.logToConsole !== undefined ? !!config.logToConsole : true;\n    this.prefix = config.prefix !== undefined ? config.prefix : '[OPTIMIZELY]';\n  }\n  /**\n   * @param {LogLevel} level\n   * @param {string} message\n   * @memberof ConsoleLogger\n   */\n\n\n  ConsoleLogHandler.prototype.log = function (level, message) {\n    if (!this.shouldLog(level) || !this.logToConsole) {\n      return;\n    }\n\n    var logMessage = this.prefix + \" - \" + this.getLogLevelName(level) + \" \" + this.getTime() + \" \" + message;\n    this.consoleLog(level, [logMessage]);\n  };\n  /**\n   * @param {LogLevel} level\n   * @memberof ConsoleLogger\n   */\n\n\n  ConsoleLogHandler.prototype.setLogLevel = function (level) {\n    level = coerceLogLevel(level);\n\n    if (!js_sdk_utils_1.isValidEnum(models_1.LogLevel, level) || level === undefined) {\n      this.logLevel = models_1.LogLevel.ERROR;\n    } else {\n      this.logLevel = level;\n    }\n  };\n  /**\n   * @returns {string}\n   * @memberof ConsoleLogger\n   */\n\n\n  ConsoleLogHandler.prototype.getTime = function () {\n    return new Date().toISOString();\n  };\n  /**\n   * @private\n   * @param {LogLevel} targetLogLevel\n   * @returns {boolean}\n   * @memberof ConsoleLogger\n   */\n\n\n  ConsoleLogHandler.prototype.shouldLog = function (targetLogLevel) {\n    return targetLogLevel >= this.logLevel;\n  };\n  /**\n   * @private\n   * @param {LogLevel} logLevel\n   * @returns {string}\n   * @memberof ConsoleLogger\n   */\n\n\n  ConsoleLogHandler.prototype.getLogLevelName = function (logLevel) {\n    switch (logLevel) {\n      case models_1.LogLevel.DEBUG:\n        return 'DEBUG';\n\n      case models_1.LogLevel.INFO:\n        return 'INFO ';\n\n      case models_1.LogLevel.WARNING:\n        return 'WARN ';\n\n      case models_1.LogLevel.ERROR:\n        return 'ERROR';\n\n      default:\n        return 'NOTSET';\n    }\n  };\n  /**\n   * @private\n   * @param {LogLevel} logLevel\n   * @param {string[]} logArguments\n   * @memberof ConsoleLogger\n   */\n\n\n  ConsoleLogHandler.prototype.consoleLog = function (logLevel, logArguments) {\n    switch (logLevel) {\n      case models_1.LogLevel.DEBUG:\n        console.log.apply(console, logArguments);\n        break;\n\n      case models_1.LogLevel.INFO:\n        console.info.apply(console, logArguments);\n        break;\n\n      case models_1.LogLevel.WARNING:\n        console.warn.apply(console, logArguments);\n        break;\n\n      case models_1.LogLevel.ERROR:\n        console.error.apply(console, logArguments);\n        break;\n\n      default:\n        console.log.apply(console, logArguments);\n    }\n  };\n\n  return ConsoleLogHandler;\n}();\n\nexports.ConsoleLogHandler = ConsoleLogHandler;\nvar globalLogLevel = models_1.LogLevel.NOTSET;\nvar globalLogHandler = null;\n\nvar OptimizelyLogger =\n/** @class */\nfunction () {\n  function OptimizelyLogger(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    this.messagePrefix = '';\n\n    if (opts.messagePrefix) {\n      this.messagePrefix = opts.messagePrefix;\n    }\n  }\n  /**\n   * @param {(LogLevel | LogInputObject)} levelOrObj\n   * @param {string} [message]\n   * @memberof OptimizelyLogger\n   */\n\n\n  OptimizelyLogger.prototype.log = function (level, message) {\n    this.internalLog(coerceLogLevel(level), {\n      message: message,\n      splat: []\n    });\n  };\n\n  OptimizelyLogger.prototype.info = function (message) {\n    var splat = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      splat[_i - 1] = arguments[_i];\n    }\n\n    this.namedLog(models_1.LogLevel.INFO, message, splat);\n  };\n\n  OptimizelyLogger.prototype.debug = function (message) {\n    var splat = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      splat[_i - 1] = arguments[_i];\n    }\n\n    this.namedLog(models_1.LogLevel.DEBUG, message, splat);\n  };\n\n  OptimizelyLogger.prototype.warn = function (message) {\n    var splat = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      splat[_i - 1] = arguments[_i];\n    }\n\n    this.namedLog(models_1.LogLevel.WARNING, message, splat);\n  };\n\n  OptimizelyLogger.prototype.error = function (message) {\n    var splat = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      splat[_i - 1] = arguments[_i];\n    }\n\n    this.namedLog(models_1.LogLevel.ERROR, message, splat);\n  };\n\n  OptimizelyLogger.prototype.format = function (data) {\n    return \"\" + (this.messagePrefix ? this.messagePrefix + ': ' : '') + js_sdk_utils_1.sprintf.apply(void 0, [data.message].concat(data.splat));\n  };\n\n  OptimizelyLogger.prototype.internalLog = function (level, data) {\n    if (!globalLogHandler) {\n      return;\n    }\n\n    if (level < globalLogLevel) {\n      return;\n    }\n\n    globalLogHandler.log(level, this.format(data));\n\n    if (data.error && data.error instanceof Error) {\n      errorHandler_1.getErrorHandler().handleError(data.error);\n    }\n  };\n\n  OptimizelyLogger.prototype.namedLog = function (level, message, splat) {\n    var error;\n\n    if (message instanceof Error) {\n      error = message;\n      message = error.message;\n      this.internalLog(level, {\n        error: error,\n        message: message,\n        splat: splat\n      });\n      return;\n    }\n\n    if (splat.length === 0) {\n      this.internalLog(level, {\n        message: message,\n        splat: splat\n      });\n      return;\n    }\n\n    var last = splat[splat.length - 1];\n\n    if (last instanceof Error) {\n      error = last;\n      splat.splice(-1);\n    }\n\n    this.internalLog(level, {\n      message: message,\n      error: error,\n      splat: splat\n    });\n  };\n\n  return OptimizelyLogger;\n}();\n\nvar globalLogManager = new DefaultLogManager();\n\nfunction getLogger(name) {\n  return globalLogManager.getLogger(name);\n}\n\nexports.getLogger = getLogger;\n\nfunction setLogHandler(logger) {\n  globalLogHandler = logger;\n}\n\nexports.setLogHandler = setLogHandler;\n\nfunction setLogLevel(level) {\n  level = coerceLogLevel(level);\n\n  if (!js_sdk_utils_1.isValidEnum(models_1.LogLevel, level) || level === undefined) {\n    globalLogLevel = models_1.LogLevel.ERROR;\n  } else {\n    globalLogLevel = level;\n  }\n}\n\nexports.setLogLevel = setLogLevel;\n\nfunction getLogLevel() {\n  return globalLogLevel;\n}\n\nexports.getLogLevel = getLogLevel;\n/**\n * Resets all global logger state to it's original\n */\n\nfunction resetLogger() {\n  globalLogManager = new DefaultLogManager();\n  globalLogLevel = models_1.LogLevel.NOTSET;\n}\n\nexports.resetLogger = resetLogger;","map":{"version":3,"sources":["/home/abhishek/Music/contentstack-reactjs-ab-testing/node_modules/@optimizely/js-sdk-logging/lib/logger.js"],"names":["Object","defineProperty","exports","value","errorHandler_1","require","js_sdk_utils_1","models_1","stringToLogLevel","NOTSET","DEBUG","INFO","WARNING","ERROR","coerceLogLevel","level","toUpperCase","DefaultLogManager","defaultLoggerFacade","OptimizelyLogger","loggers","prototype","getLogger","name","messagePrefix","ConsoleLogHandler","config","logLevel","LogLevel","undefined","isValidEnum","setLogLevel","logToConsole","prefix","log","message","shouldLog","logMessage","getLogLevelName","getTime","consoleLog","Date","toISOString","targetLogLevel","logArguments","console","apply","info","warn","error","globalLogLevel","globalLogHandler","opts","internalLog","splat","_i","arguments","length","namedLog","debug","format","data","sprintf","concat","Error","getErrorHandler","handleError","last","splice","globalLogManager","setLogHandler","logger","getLogLevel","resetLogger"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar errorHandler_1 = require(\"./errorHandler\");\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\nvar models_1 = require(\"./models\");\nvar stringToLogLevel = {\n    NOTSET: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARNING: 3,\n    ERROR: 4,\n};\nfunction coerceLogLevel(level) {\n    if (typeof level !== 'string') {\n        return level;\n    }\n    level = level.toUpperCase();\n    if (level === 'WARN') {\n        level = 'WARNING';\n    }\n    if (!stringToLogLevel[level]) {\n        return level;\n    }\n    return stringToLogLevel[level];\n}\nvar DefaultLogManager = /** @class */ (function () {\n    function DefaultLogManager() {\n        this.defaultLoggerFacade = new OptimizelyLogger();\n        this.loggers = {};\n    }\n    DefaultLogManager.prototype.getLogger = function (name) {\n        if (!name) {\n            return this.defaultLoggerFacade;\n        }\n        if (!this.loggers[name]) {\n            this.loggers[name] = new OptimizelyLogger({ messagePrefix: name });\n        }\n        return this.loggers[name];\n    };\n    return DefaultLogManager;\n}());\nvar ConsoleLogHandler = /** @class */ (function () {\n    /**\n     * Creates an instance of ConsoleLogger.\n     * @param {ConsoleLogHandlerConfig} config\n     * @memberof ConsoleLogger\n     */\n    function ConsoleLogHandler(config) {\n        if (config === void 0) { config = {}; }\n        this.logLevel = models_1.LogLevel.NOTSET;\n        if (config.logLevel !== undefined && js_sdk_utils_1.isValidEnum(models_1.LogLevel, config.logLevel)) {\n            this.setLogLevel(config.logLevel);\n        }\n        this.logToConsole = config.logToConsole !== undefined ? !!config.logToConsole : true;\n        this.prefix = config.prefix !== undefined ? config.prefix : '[OPTIMIZELY]';\n    }\n    /**\n     * @param {LogLevel} level\n     * @param {string} message\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.log = function (level, message) {\n        if (!this.shouldLog(level) || !this.logToConsole) {\n            return;\n        }\n        var logMessage = this.prefix + \" - \" + this.getLogLevelName(level) + \" \" + this.getTime() + \" \" + message;\n        this.consoleLog(level, [logMessage]);\n    };\n    /**\n     * @param {LogLevel} level\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.setLogLevel = function (level) {\n        level = coerceLogLevel(level);\n        if (!js_sdk_utils_1.isValidEnum(models_1.LogLevel, level) || level === undefined) {\n            this.logLevel = models_1.LogLevel.ERROR;\n        }\n        else {\n            this.logLevel = level;\n        }\n    };\n    /**\n     * @returns {string}\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.getTime = function () {\n        return new Date().toISOString();\n    };\n    /**\n     * @private\n     * @param {LogLevel} targetLogLevel\n     * @returns {boolean}\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.shouldLog = function (targetLogLevel) {\n        return targetLogLevel >= this.logLevel;\n    };\n    /**\n     * @private\n     * @param {LogLevel} logLevel\n     * @returns {string}\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.getLogLevelName = function (logLevel) {\n        switch (logLevel) {\n            case models_1.LogLevel.DEBUG:\n                return 'DEBUG';\n            case models_1.LogLevel.INFO:\n                return 'INFO ';\n            case models_1.LogLevel.WARNING:\n                return 'WARN ';\n            case models_1.LogLevel.ERROR:\n                return 'ERROR';\n            default:\n                return 'NOTSET';\n        }\n    };\n    /**\n     * @private\n     * @param {LogLevel} logLevel\n     * @param {string[]} logArguments\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.consoleLog = function (logLevel, logArguments) {\n        switch (logLevel) {\n            case models_1.LogLevel.DEBUG:\n                console.log.apply(console, logArguments);\n                break;\n            case models_1.LogLevel.INFO:\n                console.info.apply(console, logArguments);\n                break;\n            case models_1.LogLevel.WARNING:\n                console.warn.apply(console, logArguments);\n                break;\n            case models_1.LogLevel.ERROR:\n                console.error.apply(console, logArguments);\n                break;\n            default:\n                console.log.apply(console, logArguments);\n        }\n    };\n    return ConsoleLogHandler;\n}());\nexports.ConsoleLogHandler = ConsoleLogHandler;\nvar globalLogLevel = models_1.LogLevel.NOTSET;\nvar globalLogHandler = null;\nvar OptimizelyLogger = /** @class */ (function () {\n    function OptimizelyLogger(opts) {\n        if (opts === void 0) { opts = {}; }\n        this.messagePrefix = '';\n        if (opts.messagePrefix) {\n            this.messagePrefix = opts.messagePrefix;\n        }\n    }\n    /**\n     * @param {(LogLevel | LogInputObject)} levelOrObj\n     * @param {string} [message]\n     * @memberof OptimizelyLogger\n     */\n    OptimizelyLogger.prototype.log = function (level, message) {\n        this.internalLog(coerceLogLevel(level), {\n            message: message,\n            splat: [],\n        });\n    };\n    OptimizelyLogger.prototype.info = function (message) {\n        var splat = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            splat[_i - 1] = arguments[_i];\n        }\n        this.namedLog(models_1.LogLevel.INFO, message, splat);\n    };\n    OptimizelyLogger.prototype.debug = function (message) {\n        var splat = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            splat[_i - 1] = arguments[_i];\n        }\n        this.namedLog(models_1.LogLevel.DEBUG, message, splat);\n    };\n    OptimizelyLogger.prototype.warn = function (message) {\n        var splat = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            splat[_i - 1] = arguments[_i];\n        }\n        this.namedLog(models_1.LogLevel.WARNING, message, splat);\n    };\n    OptimizelyLogger.prototype.error = function (message) {\n        var splat = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            splat[_i - 1] = arguments[_i];\n        }\n        this.namedLog(models_1.LogLevel.ERROR, message, splat);\n    };\n    OptimizelyLogger.prototype.format = function (data) {\n        return \"\" + (this.messagePrefix ? this.messagePrefix + ': ' : '') + js_sdk_utils_1.sprintf.apply(void 0, [data.message].concat(data.splat));\n    };\n    OptimizelyLogger.prototype.internalLog = function (level, data) {\n        if (!globalLogHandler) {\n            return;\n        }\n        if (level < globalLogLevel) {\n            return;\n        }\n        globalLogHandler.log(level, this.format(data));\n        if (data.error && data.error instanceof Error) {\n            errorHandler_1.getErrorHandler().handleError(data.error);\n        }\n    };\n    OptimizelyLogger.prototype.namedLog = function (level, message, splat) {\n        var error;\n        if (message instanceof Error) {\n            error = message;\n            message = error.message;\n            this.internalLog(level, {\n                error: error,\n                message: message,\n                splat: splat,\n            });\n            return;\n        }\n        if (splat.length === 0) {\n            this.internalLog(level, {\n                message: message,\n                splat: splat,\n            });\n            return;\n        }\n        var last = splat[splat.length - 1];\n        if (last instanceof Error) {\n            error = last;\n            splat.splice(-1);\n        }\n        this.internalLog(level, { message: message, error: error, splat: splat });\n    };\n    return OptimizelyLogger;\n}());\nvar globalLogManager = new DefaultLogManager();\nfunction getLogger(name) {\n    return globalLogManager.getLogger(name);\n}\nexports.getLogger = getLogger;\nfunction setLogHandler(logger) {\n    globalLogHandler = logger;\n}\nexports.setLogHandler = setLogHandler;\nfunction setLogLevel(level) {\n    level = coerceLogLevel(level);\n    if (!js_sdk_utils_1.isValidEnum(models_1.LogLevel, level) || level === undefined) {\n        globalLogLevel = models_1.LogLevel.ERROR;\n    }\n    else {\n        globalLogLevel = level;\n    }\n}\nexports.setLogLevel = setLogLevel;\nfunction getLogLevel() {\n    return globalLogLevel;\n}\nexports.getLogLevel = getLogLevel;\n/**\n * Resets all global logger state to it's original\n */\nfunction resetLogger() {\n    globalLogManager = new DefaultLogManager();\n    globalLogLevel = models_1.LogLevel.NOTSET;\n}\nexports.resetLogger = resetLogger;\n"]},"metadata":{},"sourceType":"script"}