{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Music/contentstack-reactjs-ab-testing/src/components/Home.js\";\n\n/* eslint-disable jsx-a11y/iframe-has-title */\n// Home Component\n\n/**\n * Module dependencies.\n */\nimport React, { Component } from \"react\";\nimport Typed from \"react-typed\";\nimport Footer from \"./Footer\";\nimport $ from \"jquery\";\nimport \"../staticAssets/css/style.css\";\nimport uuid from \"react-uuid\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\nimport { createInstance, OptimizelyProvider, OptimizelyFeature, withOptimizely, OptimizelyVariation, OptimizelyExperiment } from \"@optimizely/react-sdk\";\nimport { getData } from \"./Helper\";\nconst optimizely = createInstance({\n  sdkKey: process.env.REACT_APP_OPTIMIZELY_SDK_KEY,\n  datafileOptions: {\n    updateInterval: 1000,\n    autoUpdate: true\n  }\n});\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      home: \"\",\n      userCookie: uuid()\n    };\n  }\n\n  componentDidMount() {\n    document.cookie = `userID=${this.state.userCookie}`;\n    getData(`${process.env.REACT_APP_BASE_URL}v3/content_types/${process.env.REACT_APP_HOME_CONTENT_TYPE}/entries/?environment=${process.env.REACT_APP_PUBLISH_ENVIRONMENT}`).then(data => {\n      this.setState({\n        home: data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    var $header = $(\".header-animated\");\n    var $headers = $(\".header-animated opaque\");\n    var $logoAlt = $header.find(\".logo > img\").data(\"logo-alt\"); // white logo\n\n    var $logoDefault = $header.find(\".logo > img\").data(\"logo-default\"); // black logo\n\n    $(\".header\").css(\"display\", \"block\");\n\n    if (window.location.pathname != \"/features\" && window.location.pathname != \"/about\") {\n      $header.removeClass(\"opaque\");\n      $header.find(\".logo > img\").attr(\"src\", $logoAlt);\n    }\n\n    $(window).on(\"scroll\", function () {\n      if (window.location.pathname != \"/features\" && window.location.pathname != \"/about\") {\n        if ($(window).scrollTop() > 100) {\n          $header.fadeIn().addClass(\"opaque\");\n          $header.find(\".logo > img\").attr(\"src\", $logoDefault);\n        } else {\n          $header.removeClass(\"opaque\");\n          $header.find(\".logo > img\").attr(\"src\", $logoAlt);\n        }\n      }\n    });\n    $(\".dropdown\").hover(function () {\n      $(\".dropdown\").addClass(\"open\");\n    }, function () {\n      $(\".dropdown\").removeClass(\"open\");\n    });\n  }\n\n  render() {\n    if (this.state.home !== \"\") {\n      document.title = this.state.home.data.entries[0].title;\n      const html = this.state.home.data.entries[0].hero_banner.description;\n      const bannerVariationOne = this.state.home.data.entries[0].banner_variation.banner_image[0].url;\n      const bannerVariationTwo = this.state.home.data.entries[0].banner_variation.banner_image[1].url;\n      const bannerVariationDefault = this.state.home.data.entries[0].banner_variation.banner_image[3].url;\n      return React.createElement(React.Fragment, null, this.state.home.data.entries.map((obj, index) => {\n        return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(OptimizelyProvider, {\n          optimizely: optimizely,\n          user: {\n            id: document.cookie.split(\"=\")[1]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(OptimizelyExperiment, {\n          experiment: process.env.REACT_APP_OPTIMIZELY_EXPERIMENT_KEY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(OptimizelyVariation, {\n          variation: \"variation_1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"home-hero-bg hero-bg\",\n          id: \"home\",\n          style: {\n            backgroundImage: `url(${bannerVariationOne})`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"background-overlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"aligned-container typed-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"typing-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"typing-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, obj.hero_banner.title, \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \" \", React.createElement(Typed, {\n          strings: [`${obj.hero_banner.rolling_text[0]}`],\n          typeSpeed: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), \" \"))), ReactHtmlParser(html), React.createElement(WrappedButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })))))), React.createElement(OptimizelyVariation, {\n          variation: \"variation_2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"home-hero-bg hero-bg\",\n          id: \"home\",\n          style: {\n            backgroundImage: `url(${bannerVariationTwo})`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"background-overlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"aligned-container typed-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"typing-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"typing-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, obj.hero_banner.title, \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \" \", React.createElement(Typed, {\n          strings: [`${obj.hero_banner.rolling_text[0]}`],\n          typeSpeed: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }), \" \"))), ReactHtmlParser(html), React.createElement(WrappedButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        })))))), React.createElement(OptimizelyVariation, {\n          default: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"home-hero-bg hero-bg\",\n          id: \"home\",\n          style: {\n            backgroundImage: `url(${bannerVariationDefault})`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"background-overlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"aligned-container typed-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"typing-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"typing-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, obj.hero_banner.title, \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \" \", React.createElement(Typed, {\n          strings: [`${obj.hero_banner.rolling_text[0]}`],\n          typeSpeed: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }), \" \"))), ReactHtmlParser(html), React.createElement(WrappedButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        })))))))), React.createElement(\"div\", {\n          className: \"main-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"modal videoModal fade\",\n          id: \"videoModal\",\n          tabindex: \"-1\",\n          role: \"dialog\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-dialog modal-lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"data-dismiss\": \"modal\",\n          \"aria-label\": \"Close\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \"\\xD7\")))))), React.createElement(Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }));\n      }));\n    } else if (this.state.home === \"\") {\n      return null;\n    }\n  }\n\n}\n\nfunction Button(props) {\n  function onClick(event) {\n    props.optimizely.track(\"buyOption\");\n  }\n\n  return React.createElement(\"a\", {\n    href: \"#\",\n    className: \"btn btn-primary mrm\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Buy Now\");\n}\n\nconst WrappedButton = withOptimizely(Button);\nexport default Home;","map":{"version":3,"sources":["/home/abhishek/Music/contentstack-reactjs-ab-testing/src/components/Home.js"],"names":["React","Component","Typed","Footer","$","uuid","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","createInstance","OptimizelyProvider","OptimizelyFeature","withOptimizely","OptimizelyVariation","OptimizelyExperiment","getData","optimizely","sdkKey","process","env","REACT_APP_OPTIMIZELY_SDK_KEY","datafileOptions","updateInterval","autoUpdate","Home","constructor","props","state","home","userCookie","componentDidMount","document","cookie","REACT_APP_BASE_URL","REACT_APP_HOME_CONTENT_TYPE","REACT_APP_PUBLISH_ENVIRONMENT","then","data","setState","catch","err","console","log","$header","$headers","$logoAlt","find","$logoDefault","css","window","location","pathname","removeClass","attr","on","scrollTop","fadeIn","addClass","hover","render","title","entries","html","hero_banner","description","bannerVariationOne","banner_variation","banner_image","url","bannerVariationTwo","bannerVariationDefault","map","obj","index","id","split","REACT_APP_OPTIMIZELY_EXPERIMENT_KEY","backgroundImage","rolling_text","Button","onClick","event","track","WrappedButton"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/iframe-has-title */\n// Home Component\n\n/**\n * Module dependencies.\n */\n\nimport React, { Component } from \"react\";\nimport Typed from \"react-typed\";\nimport Footer from \"./Footer\";\nimport $ from \"jquery\";\nimport \"../staticAssets/css/style.css\";\nimport uuid from \"react-uuid\";\n\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2,\n} from \"react-html-parser\";\nimport {\n  createInstance,\n  OptimizelyProvider,\n  OptimizelyFeature,\n  withOptimizely,\n  OptimizelyVariation,\n  OptimizelyExperiment,\n} from \"@optimizely/react-sdk\";\nimport { getData } from \"./Helper\";\n\nconst optimizely = createInstance({\n  sdkKey: process.env.REACT_APP_OPTIMIZELY_SDK_KEY,\n  datafileOptions: {\n    updateInterval: 1000,\n    autoUpdate: true,\n  },\n});\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      home: \"\",\n      userCookie: uuid(),\n    };\n  }\n\n  componentDidMount() {\n    document.cookie = `userID=${this.state.userCookie}`;\n    getData(\n      `${process.env.REACT_APP_BASE_URL}v3/content_types/${process.env.REACT_APP_HOME_CONTENT_TYPE}/entries/?environment=${process.env.REACT_APP_PUBLISH_ENVIRONMENT}`\n    )\n      .then((data) => {\n        this.setState({\n          home: data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    var $header = $(\".header-animated\");\n    var $headers = $(\".header-animated opaque\");\n    var $logoAlt = $header.find(\".logo > img\").data(\"logo-alt\"); // white logo\n    var $logoDefault = $header.find(\".logo > img\").data(\"logo-default\"); // black logo\n    $(\".header\").css(\"display\", \"block\");\n\n    if (\n      window.location.pathname != \"/features\" &&\n      window.location.pathname != \"/about\"\n    ) {\n      $header.removeClass(\"opaque\");\n      $header.find(\".logo > img\").attr(\"src\", $logoAlt);\n    }\n\n   $(window).on(\"scroll\", function () {\n      if (\n        window.location.pathname != \"/features\" &&\n        window.location.pathname != \"/about\"\n      ) {\n        if ($(window).scrollTop() > 100) {\n          $header.fadeIn().addClass(\"opaque\");\n          $header.find(\".logo > img\").attr(\"src\", $logoDefault);\n        } else {\n          $header.removeClass(\"opaque\");\n          $header.find(\".logo > img\").attr(\"src\", $logoAlt);\n        }\n      }\n    });\n    $(\".dropdown\").hover(\n      function () {\n        $(\".dropdown\").addClass(\"open\");\n      },\n      function () {\n        $(\".dropdown\").removeClass(\"open\");\n      }\n    );\n  }\n\n  render() {\n    if (this.state.home !== \"\") {\n      document.title = this.state.home.data.entries[0].title;\n      const html = this.state.home.data.entries[0].hero_banner.description;\n      const bannerVariationOne = this.state.home.data.entries[0]\n        .banner_variation.banner_image[0].url;\n      const bannerVariationTwo = this.state.home.data.entries[0]\n        .banner_variation.banner_image[1].url;\n      const bannerVariationDefault = this.state.home.data.entries[0]\n        .banner_variation.banner_image[3].url;\n\n      return (\n        <>\n          {this.state.home.data.entries.map((obj, index) => {\n            return (\n              <>\n                <section>\n                  <div className=\"wrapper\">\n                    <OptimizelyProvider\n                      optimizely={optimizely}\n                      user={{ id: document.cookie.split(\"=\")[1] }}\n                    >\n                      <OptimizelyExperiment\n                        experiment={\n                          process.env.REACT_APP_OPTIMIZELY_EXPERIMENT_KEY\n                        }\n                      >\n                        <OptimizelyVariation variation=\"variation_1\">\n                          {\n                            <>\n                              <div\n                                className=\"home-hero-bg hero-bg\"\n                                id=\"home\"\n                                style={{\n                                  backgroundImage: `url(${bannerVariationOne})`,\n                                }}\n                              >\n                                <div className=\"background-overlay\"></div>\n                                <div className=\"aligned-container typed-container\">\n                                  <div className=\"container\">\n                                    <div className=\"typing-block\">\n                                      <div className=\"typing-block\">\n                                        {obj.hero_banner.title}{\" \"}\n                                        <span>\n                                          {\" \"}\n                                          <Typed\n                                            strings={[\n                                              `${obj.hero_banner.rolling_text[0]}`,\n                                            ]}\n                                            typeSpeed={50}\n                                          />{\" \"}\n                                        </span>\n                                      </div>\n                                    </div>\n                                    {ReactHtmlParser(html)}\n                                    <WrappedButton />\n                                  </div>\n                                </div>\n                              </div>\n                            </>\n                          }\n                        </OptimizelyVariation>\n                        <OptimizelyVariation variation=\"variation_2\">\n                          {\n                            <>\n                              <div\n                                className=\"home-hero-bg hero-bg\"\n                                id=\"home\"\n                                style={{\n                                  backgroundImage: `url(${bannerVariationTwo})`,\n                                }}\n                              >\n                                <div className=\"background-overlay\"></div>\n                                <div className=\"aligned-container typed-container\">\n                                  <div className=\"container\">\n                                    <div className=\"typing-block\">\n                                      <div className=\"typing-block\">\n                                        {obj.hero_banner.title}{\" \"}\n                                        <span>\n                                          {\" \"}\n                                          <Typed\n                                            strings={[\n                                              `${obj.hero_banner.rolling_text[0]}`,\n                                            ]}\n                                            typeSpeed={50}\n                                          />{\" \"}\n                                        </span>\n                                      </div>\n                                    </div>\n                                    {ReactHtmlParser(html)}\n                                    <WrappedButton />\n                                  </div>\n                                </div>\n                              </div>\n                            </>\n                          }\n                        </OptimizelyVariation>\n                        <OptimizelyVariation default>\n                          {\n                            <>\n                              <div\n                                className=\"home-hero-bg hero-bg\"\n                                id=\"home\"\n                                style={{\n                                  backgroundImage: `url(${bannerVariationDefault})`,\n                                }}\n                              >\n                                <div className=\"background-overlay\"></div>\n                                <div className=\"aligned-container typed-container\">\n                                  <div className=\"container\">\n                                    <div className=\"typing-block\">\n                                      <div className=\"typing-block\">\n                                        {obj.hero_banner.title}{\" \"}\n                                        <span>\n                                          {\" \"}\n                                          <Typed\n                                            strings={[\n                                              `${obj.hero_banner.rolling_text[0]}`,\n                                            ]}\n                                            typeSpeed={50}\n                                          />{\" \"}\n                                        </span>\n                                      </div>\n                                    </div>\n                                    {ReactHtmlParser(html)}\n                                    <WrappedButton />\n                                  </div>\n                                </div>\n                              </div>\n                            </>\n                          }\n                        </OptimizelyVariation>\n                      </OptimizelyExperiment>\n                    </OptimizelyProvider>\n                    <div className=\"main-container\"></div>\n                  </div>\n                  {/* <!-- Video --> */}\n                  <div\n                    className=\"modal videoModal fade\"\n                    id=\"videoModal\"\n                    tabindex=\"-1\"\n                    role=\"dialog\"\n                    aria-hidden=\"true\"\n                  >\n                    <div className=\"modal-dialog modal-lg\">\n                      <div className=\"modal-header\">\n                        <button\n                          type=\"button\"\n                          className=\"close\"\n                          data-dismiss=\"modal\"\n                          aria-label=\"Close\"\n                        >\n                          <span aria-hidden=\"true\">×</span>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n                <Footer />\n              </>\n            );\n          })}\n        </>\n      );\n    } else if (this.state.home === \"\") {\n      return null;\n    }\n  }\n}\nfunction Button(props) {\n  function onClick(event) {\n    props.optimizely.track(\"buyOption\");\n  }\n\n  return (\n    <a href=\"#\" className=\"btn btn-primary mrm\" onClick={onClick}>\n      Buy Now\n    </a>\n  );\n}\n\nconst WrappedButton = withOptimizely(Button);\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}